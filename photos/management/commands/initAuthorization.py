from django.core.management.base import BaseCommand, CommandError
import flickr_api
import facebook

class  Command(BaseCommand):
	help = 'Generate necessary authorization files for facebook and flickr'

	def handle(self, *args, **options):
		__facebook_page_token = raw_input('facebook_fanpage_access_token = ')
		__flickr_api_key = raw_input('flickr_api_key = ')
		__flickr_api_secret = raw_input('flickr_api_secret = ')

		f  = open('photos/authorization_token.py', 'w')
		f.write('\n# auto generated by "python manage.py initAuthorization"\n')
		f.write('import facebook\n\n')
		f.write('__facebook_page_token = "{}"\n'.format(__facebook_page_token))
		f.write('__flickr_api_key = "{}"\n'.format(__flickr_api_key))
		f.write('__flickr_api_secret = "{}"\n'.format(__flickr_api_secret))
		f.write('\n')
		f.write('fb_fanpage_graph = facebook.GraphAPI(access_token=__facebook_page_token, version="2.5")\n\n')
		f.close()

		print 'Testing Flickr API ...'
		flickr_api.set_keys(api_key = __flickr_api_key, api_secret = __flickr_api_secret)
		a = flickr_api.auth.AuthHandler()
		url = a.get_authorization_url('delete')
		print 'please open the url in the browser and grant the permission'
		print 'and then paste the "verifier_code" to the terminal'
		print url
		verifier_code = raw_input('verifier code = ')
		try:
			a.set_verifier(verifier_code)
			a.save('oauth_verifier.txt')
			flickr_api.set_auth_handler('oauth_verifier.txt')
			user = flickr_api.test.login()
			print user
		except Exception as e:
			print str(e)

		print 'Testing Facebook API...'
		page = facebook.GraphAPI(access_token=__facebook_page_token, version='2.5').get_object(id='me')
		print '{} (id = {})'.format(page['name'].encode('utf-8'), page['id'])